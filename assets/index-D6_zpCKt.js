var ue=Object.defineProperty;var pe=(d,u,e)=>u in d?ue(d,u,{enumerable:!0,configurable:!0,writable:!0,value:e}):d[u]=e;var de=(d,u)=>()=>(u||d((u={exports:{}}).exports,u),u.exports);var k=(d,u,e)=>pe(d,typeof u!="symbol"?u+"":u,e);var ke=de(H=>{(function(){const u=document.createElement("link").relList;if(u&&u.supports&&u.supports("modulepreload"))return;for(const f of document.querySelectorAll('link[rel="modulepreload"]'))a(f);new MutationObserver(f=>{for(const m of f)if(m.type==="childList")for(const C of m.addedNodes)C.tagName==="LINK"&&C.rel==="modulepreload"&&a(C)}).observe(document,{childList:!0,subtree:!0});function e(f){const m={};return f.integrity&&(m.integrity=f.integrity),f.referrerPolicy&&(m.referrerPolicy=f.referrerPolicy),f.crossOrigin==="use-credentials"?m.credentials="include":f.crossOrigin==="anonymous"?m.credentials="omit":m.credentials="same-origin",m}function a(f){if(f.ep)return;f.ep=!0;const m=e(f);fetch(f.href,m)}})();var P=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function M(d){return d&&d.__esModule&&Object.prototype.hasOwnProperty.call(d,"default")?d.default:d}function le(d){if(d.__esModule)return d;var u=d.default;if(typeof u=="function"){var e=function a(){return this instanceof a?Reflect.construct(u,arguments,this.constructor):u.apply(this,arguments)};e.prototype=u.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(d).forEach(function(a){var f=Object.getOwnPropertyDescriptor(d,a);Object.defineProperty(e,a,f.get?f:{enumerable:!0,get:function(){return d[a]}})}),e}var D={exports:{}},T,z;function me(){if(z)return T;z=1;var d=1e3,u=d*60,e=u*60,a=e*24,f=a*7,m=a*365.25;T=function(t,r){r=r||{};var c=typeof t;if(c==="string"&&t.length>0)return C(t);if(c==="number"&&isFinite(t))return r.long?y(t):v(t);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(t))};function C(t){if(t=String(t),!(t.length>100)){var r=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);if(r){var c=parseFloat(r[1]),p=(r[2]||"ms").toLowerCase();switch(p){case"years":case"year":case"yrs":case"yr":case"y":return c*m;case"weeks":case"week":case"w":return c*f;case"days":case"day":case"d":return c*a;case"hours":case"hour":case"hrs":case"hr":case"h":return c*e;case"minutes":case"minute":case"mins":case"min":case"m":return c*u;case"seconds":case"second":case"secs":case"sec":case"s":return c*d;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return c;default:return}}}}function v(t){var r=Math.abs(t);return r>=a?Math.round(t/a)+"d":r>=e?Math.round(t/e)+"h":r>=u?Math.round(t/u)+"m":r>=d?Math.round(t/d)+"s":t+"ms"}function y(t){var r=Math.abs(t);return r>=a?i(t,r,a,"day"):r>=e?i(t,r,e,"hour"):r>=u?i(t,r,u,"minute"):r>=d?i(t,r,d,"second"):t+" ms"}function i(t,r,c,p){var g=r>=c*1.5;return Math.round(t/c)+" "+p+(g?"s":"")}return T}function fe(d){e.debug=e,e.default=e,e.coerce=y,e.disable=m,e.enable=f,e.enabled=C,e.humanize=me(),e.destroy=i,Object.keys(d).forEach(t=>{e[t]=d[t]}),e.names=[],e.skips=[],e.formatters={};function u(t){let r=0;for(let c=0;c<t.length;c++)r=(r<<5)-r+t.charCodeAt(c),r|=0;return e.colors[Math.abs(r)%e.colors.length]}e.selectColor=u;function e(t){let r,c=null,p,g;function l(...o){if(!l.enabled)return;const b=l,n=Number(new Date),s=n-(r||n);b.diff=s,b.prev=r,b.curr=n,r=n,o[0]=e.coerce(o[0]),typeof o[0]!="string"&&o.unshift("%O");let h=0;o[0]=o[0].replace(/%([a-zA-Z%])/g,(w,V)=>{if(w==="%%")return"%";h++;const N=e.formatters[V];if(typeof N=="function"){const B=o[h];w=N.call(b,B),o.splice(h,1),h--}return w}),e.formatArgs.call(b,o),(b.log||e.log).apply(b,o)}return l.namespace=t,l.useColors=e.useColors(),l.color=e.selectColor(t),l.extend=a,l.destroy=e.destroy,Object.defineProperty(l,"enabled",{enumerable:!0,configurable:!1,get:()=>c!==null?c:(p!==e.namespaces&&(p=e.namespaces,g=e.enabled(t)),g),set:o=>{c=o}}),typeof e.init=="function"&&e.init(l),l}function a(t,r){const c=e(this.namespace+(typeof r>"u"?":":r)+t);return c.log=this.log,c}function f(t){e.save(t),e.namespaces=t,e.names=[],e.skips=[];let r;const c=(typeof t=="string"?t:"").split(/[\s,]+/),p=c.length;for(r=0;r<p;r++)c[r]&&(t=c[r].replace(/\*/g,".*?"),t[0]==="-"?e.skips.push(new RegExp("^"+t.slice(1)+"$")):e.names.push(new RegExp("^"+t+"$")))}function m(){const t=[...e.names.map(v),...e.skips.map(v).map(r=>"-"+r)].join(",");return e.enable(""),t}function C(t){if(t[t.length-1]==="*")return!0;let r,c;for(r=0,c=e.skips.length;r<c;r++)if(e.skips[r].test(t))return!1;for(r=0,c=e.names.length;r<c;r++)if(e.names[r].test(t))return!0;return!1}function v(t){return t.toString().substring(2,t.toString().length-2).replace(/\.\*\?$/,"*")}function y(t){return t instanceof Error?t.stack||t.message:t}function i(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return e.enable(e.load()),e}var ye=fe;(function(d,u){var e={};u.formatArgs=f,u.save=m,u.load=C,u.useColors=a,u.storage=v(),u.destroy=(()=>{let i=!1;return()=>{i||(i=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),u.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function a(){if(typeof window<"u"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs))return!0;if(typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let i;return typeof document<"u"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window<"u"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator<"u"&&navigator.userAgent&&(i=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(i[1],10)>=31||typeof navigator<"u"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function f(i){if(i[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+i[0]+(this.useColors?"%c ":" ")+"+"+d.exports.humanize(this.diff),!this.useColors)return;const t="color: "+this.color;i.splice(1,0,t,"color: inherit");let r=0,c=0;i[0].replace(/%[a-zA-Z%]/g,p=>{p!=="%%"&&(r++,p==="%c"&&(c=r))}),i.splice(c,0,t)}u.log=console.debug||console.log||(()=>{});function m(i){try{i?u.storage.setItem("debug",i):u.storage.removeItem("debug")}catch{}}function C(){let i;try{i=u.storage.getItem("debug")}catch{}return!i&&typeof process<"u"&&"env"in process&&(i=e.DEBUG),i}function v(){try{return localStorage}catch{}}d.exports=ye(u);const{formatters:y}=d.exports;y.j=function(i){try{return JSON.stringify(i)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}})(D,D.exports);var ge=D.exports;const he=M(ge);var Y={exports:{}};(function(d){var u=Object.prototype.hasOwnProperty,e="~";function a(){}Object.create&&(a.prototype=Object.create(null),new a().__proto__||(e=!1));function f(y,i,t){this.fn=y,this.context=i,this.once=t||!1}function m(y,i,t,r,c){if(typeof t!="function")throw new TypeError("The listener must be a function");var p=new f(t,r||y,c),g=e?e+i:i;return y._events[g]?y._events[g].fn?y._events[g]=[y._events[g],p]:y._events[g].push(p):(y._events[g]=p,y._eventsCount++),y}function C(y,i){--y._eventsCount===0?y._events=new a:delete y._events[i]}function v(){this._events=new a,this._eventsCount=0}v.prototype.eventNames=function(){var i=[],t,r;if(this._eventsCount===0)return i;for(r in t=this._events)u.call(t,r)&&i.push(e?r.slice(1):r);return Object.getOwnPropertySymbols?i.concat(Object.getOwnPropertySymbols(t)):i},v.prototype.listeners=function(i){var t=e?e+i:i,r=this._events[t];if(!r)return[];if(r.fn)return[r.fn];for(var c=0,p=r.length,g=new Array(p);c<p;c++)g[c]=r[c].fn;return g},v.prototype.listenerCount=function(i){var t=e?e+i:i,r=this._events[t];return r?r.fn?1:r.length:0},v.prototype.emit=function(i,t,r,c,p,g){var l=e?e+i:i;if(!this._events[l])return!1;var o=this._events[l],b=arguments.length,n,s;if(o.fn){switch(o.once&&this.removeListener(i,o.fn,void 0,!0),b){case 1:return o.fn.call(o.context),!0;case 2:return o.fn.call(o.context,t),!0;case 3:return o.fn.call(o.context,t,r),!0;case 4:return o.fn.call(o.context,t,r,c),!0;case 5:return o.fn.call(o.context,t,r,c,p),!0;case 6:return o.fn.call(o.context,t,r,c,p,g),!0}for(s=1,n=new Array(b-1);s<b;s++)n[s-1]=arguments[s];o.fn.apply(o.context,n)}else{var h=o.length,S;for(s=0;s<h;s++)switch(o[s].once&&this.removeListener(i,o[s].fn,void 0,!0),b){case 1:o[s].fn.call(o[s].context);break;case 2:o[s].fn.call(o[s].context,t);break;case 3:o[s].fn.call(o[s].context,t,r);break;case 4:o[s].fn.call(o[s].context,t,r,c);break;default:if(!n)for(S=1,n=new Array(b-1);S<b;S++)n[S-1]=arguments[S];o[s].fn.apply(o[s].context,n)}}return!0},v.prototype.on=function(i,t,r){return m(this,i,t,r,!1)},v.prototype.once=function(i,t,r){return m(this,i,t,r,!0)},v.prototype.removeListener=function(i,t,r,c){var p=e?e+i:i;if(!this._events[p])return this;if(!t)return C(this,p),this;var g=this._events[p];if(g.fn)g.fn===t&&(!c||g.once)&&(!r||g.context===r)&&C(this,p);else{for(var l=0,o=[],b=g.length;l<b;l++)(g[l].fn!==t||c&&!g[l].once||r&&g[l].context!==r)&&o.push(g[l]);o.length?this._events[p]=o.length===1?o[0]:o:C(this,p)}return this},v.prototype.removeAllListeners=function(i){var t;return i?(t=e?e+i:i,this._events[t]&&C(this,t)):(this._events=new a,this._eventsCount=0),this},v.prototype.off=v.prototype.removeListener,v.prototype.addListener=v.prototype.on,v.prefixed=e,v.EventEmitter=v,d.exports=v})(Y);var ve=Y.exports;const $=M(ve);var x=null;typeof WebSocket<"u"?x=WebSocket:typeof MozWebSocket<"u"?x=MozWebSocket:typeof global<"u"?x=global.WebSocket||global.MozWebSocket:typeof window<"u"?x=window.WebSocket||window.MozWebSocket:typeof self<"u"&&(x=self.WebSocket||self.MozWebSocket);const K=x;var ee={exports:{}};function Se(d){throw new Error('Could not dynamically require "'+d+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var R={exports:{}};const Ce={},be=Object.freeze(Object.defineProperty({__proto__:null,default:Ce},Symbol.toStringTag,{value:"Module"})),we=le(be);var U;function te(){return U||(U=1,function(d,u){(function(e,a){d.exports=a()})(P,function(){var e=e||function(a,f){var m;if(typeof window<"u"&&window.crypto&&(m=window.crypto),typeof self<"u"&&self.crypto&&(m=self.crypto),typeof globalThis<"u"&&globalThis.crypto&&(m=globalThis.crypto),!m&&typeof window<"u"&&window.msCrypto&&(m=window.msCrypto),!m&&typeof P<"u"&&P.crypto&&(m=P.crypto),!m&&typeof Se=="function")try{m=we}catch{}var C=function(){if(m){if(typeof m.getRandomValues=="function")try{return m.getRandomValues(new Uint32Array(1))[0]}catch{}if(typeof m.randomBytes=="function")try{return m.randomBytes(4).readInt32LE()}catch{}}throw new Error("Native crypto module could not be used to get secure random number.")},v=Object.create||function(){function n(){}return function(s){var h;return n.prototype=s,h=new n,n.prototype=null,h}}(),y={},i=y.lib={},t=i.Base=function(){return{extend:function(n){var s=v(this);return n&&s.mixIn(n),(!s.hasOwnProperty("init")||this.init===s.init)&&(s.init=function(){s.$super.init.apply(this,arguments)}),s.init.prototype=s,s.$super=this,s},create:function(){var n=this.extend();return n.init.apply(n,arguments),n},init:function(){},mixIn:function(n){for(var s in n)n.hasOwnProperty(s)&&(this[s]=n[s]);n.hasOwnProperty("toString")&&(this.toString=n.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),r=i.WordArray=t.extend({init:function(n,s){n=this.words=n||[],s!=f?this.sigBytes=s:this.sigBytes=n.length*4},toString:function(n){return(n||p).stringify(this)},concat:function(n){var s=this.words,h=n.words,S=this.sigBytes,w=n.sigBytes;if(this.clamp(),S%4)for(var V=0;V<w;V++){var N=h[V>>>2]>>>24-V%4*8&255;s[S+V>>>2]|=N<<24-(S+V)%4*8}else for(var B=0;B<w;B+=4)s[S+B>>>2]=h[B>>>2];return this.sigBytes+=w,this},clamp:function(){var n=this.words,s=this.sigBytes;n[s>>>2]&=4294967295<<32-s%4*8,n.length=a.ceil(s/4)},clone:function(){var n=t.clone.call(this);return n.words=this.words.slice(0),n},random:function(n){for(var s=[],h=0;h<n;h+=4)s.push(C());return new r.init(s,n)}}),c=y.enc={},p=c.Hex={stringify:function(n){for(var s=n.words,h=n.sigBytes,S=[],w=0;w<h;w++){var V=s[w>>>2]>>>24-w%4*8&255;S.push((V>>>4).toString(16)),S.push((V&15).toString(16))}return S.join("")},parse:function(n){for(var s=n.length,h=[],S=0;S<s;S+=2)h[S>>>3]|=parseInt(n.substr(S,2),16)<<24-S%8*4;return new r.init(h,s/2)}},g=c.Latin1={stringify:function(n){for(var s=n.words,h=n.sigBytes,S=[],w=0;w<h;w++){var V=s[w>>>2]>>>24-w%4*8&255;S.push(String.fromCharCode(V))}return S.join("")},parse:function(n){for(var s=n.length,h=[],S=0;S<s;S++)h[S>>>2]|=(n.charCodeAt(S)&255)<<24-S%4*8;return new r.init(h,s)}},l=c.Utf8={stringify:function(n){try{return decodeURIComponent(escape(g.stringify(n)))}catch{throw new Error("Malformed UTF-8 data")}},parse:function(n){return g.parse(unescape(encodeURIComponent(n)))}},o=i.BufferedBlockAlgorithm=t.extend({reset:function(){this._data=new r.init,this._nDataBytes=0},_append:function(n){typeof n=="string"&&(n=l.parse(n)),this._data.concat(n),this._nDataBytes+=n.sigBytes},_process:function(n){var s,h=this._data,S=h.words,w=h.sigBytes,V=this.blockSize,N=V*4,B=w/N;n?B=a.ceil(B):B=a.max((B|0)-this._minBufferSize,0);var I=B*V,F=a.min(I*4,w);if(I){for(var E=0;E<I;E+=V)this._doProcessBlock(S,E);s=S.splice(0,I),h.sigBytes-=F}return new r.init(s,F)},clone:function(){var n=t.clone.call(this);return n._data=this._data.clone(),n},_minBufferSize:0});i.Hasher=o.extend({cfg:t.extend(),init:function(n){this.cfg=this.cfg.extend(n),this.reset()},reset:function(){o.reset.call(this),this._doReset()},update:function(n){return this._append(n),this._process(),this},finalize:function(n){n&&this._append(n);var s=this._doFinalize();return s},blockSize:16,_createHelper:function(n){return function(s,h){return new n.init(h).finalize(s)}},_createHmacHelper:function(n){return function(s,h){return new b.HMAC.init(n,h).finalize(s)}}});var b=y.algo={};return y}(Math);return e})}(R)),R.exports}(function(d,u){(function(e,a){d.exports=a(te())})(P,function(e){return function(a){var f=e,m=f.lib,C=m.WordArray,v=m.Hasher,y=f.algo,i=[],t=[];(function(){function p(b){for(var n=a.sqrt(b),s=2;s<=n;s++)if(!(b%s))return!1;return!0}function g(b){return(b-(b|0))*4294967296|0}for(var l=2,o=0;o<64;)p(l)&&(o<8&&(i[o]=g(a.pow(l,1/2))),t[o]=g(a.pow(l,1/3)),o++),l++})();var r=[],c=y.SHA256=v.extend({_doReset:function(){this._hash=new C.init(i.slice(0))},_doProcessBlock:function(p,g){for(var l=this._hash.words,o=l[0],b=l[1],n=l[2],s=l[3],h=l[4],S=l[5],w=l[6],V=l[7],N=0;N<64;N++){if(N<16)r[N]=p[g+N]|0;else{var B=r[N-15],I=(B<<25|B>>>7)^(B<<14|B>>>18)^B>>>3,F=r[N-2],E=(F<<15|F>>>17)^(F<<13|F>>>19)^F>>>10;r[N]=I+r[N-7]+E+r[N-16]}var ie=h&S^~h&w,se=o&b^o&n^b&n,oe=(o<<30|o>>>2)^(o<<19|o>>>13)^(o<<10|o>>>22),ae=(h<<26|h>>>6)^(h<<21|h>>>11)^(h<<7|h>>>25),q=V+ae+ie+t[N]+r[N],ce=oe+se;V=w,w=S,S=h,h=s+q|0,s=n,n=b,b=o,o=q+ce|0}l[0]=l[0]+o|0,l[1]=l[1]+b|0,l[2]=l[2]+n|0,l[3]=l[3]+s|0,l[4]=l[4]+h|0,l[5]=l[5]+S|0,l[6]=l[6]+w|0,l[7]=l[7]+V|0},_doFinalize:function(){var p=this._data,g=p.words,l=this._nDataBytes*8,o=p.sigBytes*8;return g[o>>>5]|=128<<24-o%32,g[(o+64>>>9<<4)+14]=a.floor(l/4294967296),g[(o+64>>>9<<4)+15]=l,p.sigBytes=g.length*4,this._process(),this._hash},clone:function(){var p=v.clone.call(this);return p._hash=this._hash.clone(),p}});f.SHA256=v._createHelper(c),f.HmacSHA256=v._createHmacHelper(c)}(Math),e.SHA256})})(ee);var Ve=ee.exports;const J=M(Ve);var re={exports:{}};(function(d,u){(function(e,a){d.exports=a(te())})(P,function(e){return function(){var a=e,f=a.lib,m=f.WordArray,C=a.enc;C.Base64={stringify:function(y){var i=y.words,t=y.sigBytes,r=this._map;y.clamp();for(var c=[],p=0;p<t;p+=3)for(var g=i[p>>>2]>>>24-p%4*8&255,l=i[p+1>>>2]>>>24-(p+1)%4*8&255,o=i[p+2>>>2]>>>24-(p+2)%4*8&255,b=g<<16|l<<8|o,n=0;n<4&&p+n*.75<t;n++)c.push(r.charAt(b>>>6*(3-n)&63));var s=r.charAt(64);if(s)for(;c.length%4;)c.push(s);return c.join("")},parse:function(y){var i=y.length,t=this._map,r=this._reverseMap;if(!r){r=this._reverseMap=[];for(var c=0;c<t.length;c++)r[t.charCodeAt(c)]=c}var p=t.charAt(64);if(p){var g=y.indexOf(p);g!==-1&&(i=g)}return v(y,i,r)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="};function v(y,i,t){for(var r=[],c=0,p=0;p<i;p++)if(p%4){var g=t[y.charCodeAt(p-1)]<<p%4*2,l=t[y.charCodeAt(p)]>>>6-p%4*2,o=g|l;r[c>>>2]|=o<<24-c%4*8,c++}return m.create(r,c)}}(),e.enc.Base64})})(re);var Ne=re.exports;const Z=M(Ne);function Be(d,u,e){const a=Z.stringify(J(e+d));return Z.stringify(J(a+u))}var L=he("obs-websocket-js"),G=class extends Error{constructor(d,u){super(u),this.code=d}},O,Oe=(O=class extends ${constructor(){super(...arguments);k(this,"_identified",!1);k(this,"internalListeners",new $);k(this,"socket")}static generateMessageId(){return String(O.requestCounter++)}get identified(){return this._identified}async connect(e="ws://127.0.0.1:4455",a,f={}){this.socket&&await this.disconnect();try{const m=this.internalEventPromise("ConnectionClosed"),C=this.internalEventPromise("ConnectionError");return await Promise.race([(async()=>{const v=await this.createConnection(e);return this.emit("Hello",v),this.identify(v,a,f)})(),new Promise((v,y)=>{C.then(i=>{i.message&&y(i)}),m.then(i=>{y(i)})})])}catch(m){throw await this.disconnect(),m}}async disconnect(){if(!this.socket||this.socket.readyState===K.CLOSED)return;const e=this.internalEventPromise("ConnectionClosed");this.socket.close(),await e}async reidentify(e){const a=this.internalEventPromise("op:2");return await this.message(3,e),a}async call(e,a){const f=O.generateMessageId(),m=this.internalEventPromise(`res:${f}`);await this.message(6,{requestId:f,requestType:e,requestData:a});const{requestStatus:C,responseData:v}=await m;if(!C.result)throw new G(C.code,C.comment);return v}async callBatch(e,a={}){const f=O.generateMessageId(),m=this.internalEventPromise(`res:${f}`);await this.message(8,{requestId:f,requests:e,...a});const{results:C}=await m;return C}cleanup(){this.socket&&(this.socket.onopen=null,this.socket.onmessage=null,this.socket.onerror=null,this.socket.onclose=null,this.socket=void 0,this._identified=!1,this.internalListeners.removeAllListeners())}async createConnection(e){var a;const f=this.internalEventPromise("ConnectionOpened"),m=this.internalEventPromise("op:0");this.socket=new K(e,this.protocol),this.socket.onopen=this.onOpen.bind(this),this.socket.onmessage=this.onMessage.bind(this),this.socket.onerror=this.onError.bind(this),this.socket.onclose=this.onClose.bind(this),await f;const C=(a=this.socket)==null?void 0:a.protocol;if(!C)throw new G(-1,"Server sent no subprotocol");if(C!==this.protocol)throw new G(-1,"Server sent an invalid subprotocol");return m}async identify({authentication:e,rpcVersion:a,...f},m,C={}){const v={rpcVersion:a,...C};e&&m&&(v.authentication=Be(e.salt,e.challenge,m));const y=this.internalEventPromise("op:2");await this.message(1,v);const i=await y;return this._identified=!0,this.emit("Identified",i),{rpcVersion:a,...f,...i}}async message(e,a){if(!this.socket)throw new Error("Not connected");if(!this.identified&&e!==1)throw new Error("Socket not identified");const f=await this.encodeMessage({op:e,d:a});this.socket.send(f)}async internalEventPromise(e){return new Promise(a=>{this.internalListeners.once(e,a)})}onOpen(e){L("socket.open"),this.emit("ConnectionOpened"),this.internalListeners.emit("ConnectionOpened",e)}async onMessage(e){try{const{op:a,d:f}=await this.decodeMessage(e.data);if(L("socket.message: %d %j",a,f),a===void 0||f===void 0)return;switch(a){case 5:{const{eventType:m,eventData:C}=f;this.emit(m,C);return}case 7:case 9:{const{requestId:m}=f;this.internalListeners.emit(`res:${m}`,f);return}default:this.internalListeners.emit(`op:${a}`,f)}}catch(a){L("error handling message: %o",a)}}onError(e){L("socket.error: %o",e);const a=new G(-1,e.message);this.emit("ConnectionError",a),this.internalListeners.emit("ConnectionError",a)}onClose(e){L("socket.close: %s (%d)",e.reason,e.code);const a=new G(e.code,e.reason);this.emit("ConnectionClosed",a),this.internalListeners.emit("ConnectionClosed",a),this.cleanup()}},k(O,"requestCounter",1),O);typeof H<"u"&&Object.defineProperty(H,"__esModule",{value:!0});var Fe=class extends Oe{constructor(){super(...arguments);k(this,"protocol","obswebsocket.json")}async encodeMessage(u){return JSON.stringify(u)}async decodeMessage(u){return JSON.parse(u)}};const _=new Fe;let j=!1;const W=document.getElementById("connect-ws"),A=document.getElementById("ws-status"),ne=document.getElementById("function-list"),Q=document.getElementById("result"),_e=[{name:"获取版本 GetVersion",description:"获取 OBS 的版本信息",params:[],returnValue:"包含版本信息的对象"},{name:"获取统计信息 GetStats",description:"获取 OBS 的统计数据",params:[],returnValue:"包含统计信息的对象"},{name:"广播自定义事件 BroadcastCustomEvent",description:"向 OBS 广播自定义事件",params:{eventData:{type:"object",description:"自定义事件的数据"}},returnValue:"操作成功或失败的布尔值"},{name:"调用供应商请求 CallVendorRequest",description:"调用 OBS 的供应商特定请求",params:{vendorRequestData:{type:"object",description:"供应商请求的数据"}},returnValue:"根据供应商请求而定的返回值"},{name:"获取热键列表 GetHotkeyList",description:"获取 OBS 中设置的热键列表",params:[],returnValue:"包含热键信息的数组"},{name:"按名称触发热键 TriggerHotkeyByName",description:"通过名称触发热键",params:{hotkeyName:{type:"string",description:"要触发的热键名称"}},returnValue:"操作成功或失败的布尔值"},{name:"按键序列触发热键 TriggerHotkeyByKeySequence",description:"通过按键序列触发热键",params:{keySequence:{type:"string",description:"按键序列"}},returnValue:"操作成功或失败的布尔值"},{name:"休眠 Sleep",description:"使 OBS 进入休眠状态",params:{sleepDuration:{type:"number",description:"休眠的时长（毫秒）"}},returnValue:"操作成功或失败的布尔值"},{name:"获取持久数据 GetPersistentData",description:"获取 OBS 的持久数据",params:[],returnValue:"包含持久数据的对象"},{name:"设置持久数据 SetPersistentData",description:"设置 OBS 的持久数据",params:{data:{type:"object",description:"要设置的持久数据"}},returnValue:"操作成功或失败的布尔值"},{name:"获取场景集合列表 GetSceneCollectionList",description:"获取 OBS 中的场景集合列表",params:[],returnValue:"包含场景集合信息的数组"},{name:"设置当前场景集合 SetCurrentSceneCollection",description:"设置当前使用的场景集合",params:{collectionName:{type:"string",description:"要设置的场景集合名称"}},returnValue:"操作成功或失败的布尔值"},{name:"创建场景集合 CreateSceneCollection",description:"在 OBS 中创建新的场景集合",params:{collectionName:{type:"string",description:"新场景集合的名称"}},returnValue:"操作成功或失败的布尔值"},{name:"获取配置文件列表 GetProfileList",description:"获取 OBS 的配置文件列表",params:[],returnValue:"包含配置文件信息的数组"},{name:"设置当前配置文件 SetCurrentProfile",description:"设置当前使用的配置文件",params:{profileName:{type:"string",description:"要设置的配置文件名称"}},returnValue:"操作成功或失败的布尔值"},{name:"创建配置文件 CreateProfile",description:"在 OBS 中创建新的配置文件",params:{profileName:{type:"string",description:"新配置文件的名称"}},returnValue:"操作成功或失败的布尔值"},{name:"删除配置文件 RemoveProfile",description:"删除 OBS 中的指定配置文件",params:{profileName:{type:"string",description:"要删除的配置文件名称"}},returnValue:"操作成功或失败的布尔值"},{name:"获取配置文件参数 GetProfileParameter",description:"获取指定配置文件的参数",params:{profileName:{type:"string",description:"配置文件名称"},parameterName:{type:"string",description:"要获取的参数名称"}},returnValue:"包含参数值的对象"},{name:"设置配置文件参数 SetProfileParameter",description:"设置指定配置文件的参数值",params:{profileName:{type:"string",description:"配置文件名称"},parameterName:{type:"string",description:"要设置的参数名称"},parameterValue:{type:"any",description:"参数的值"}},returnValue:"操作成功或失败的布尔值"},{name:"获取视频设置 GetVideoSettings",description:"获取 OBS 的视频设置",params:[],returnValue:"包含视频设置信息的对象"},{name:"设置视频设置 SetVideoSettings",description:"设置 OBS 的视频设置",params:{videoSettings:{type:"object",description:"包含分辨率、帧率、编码等视频设置的对象"}},returnValue:"操作成功或失败的布尔值"},{name:"获取流服务设置 GetStreamServiceSettings",description:"获取 OBS 的流服务设置",params:[],returnValue:"包含流服务设置信息的对象"},{name:"设置流服务设置 SetStreamServiceSettings",description:"设置 OBS 的流服务设置",params:{streamServiceSettings:{type:"object",description:"包含流服务相关设置的对象"}},returnValue:"操作成功或失败的布尔值"},{name:"获取录制目录 GetRecordDirectory",description:"获取 OBS 的录制目录路径",params:[],returnValue:"包含录制目录路径的字符串"},{name:"设置录制目录 SetRecordDirectory",description:"设置 OBS 的录制目录",params:{directoryPath:{type:"string",description:"新的录制目录路径"}},returnValue:"操作成功或失败的布尔值"},{name:"获取来源活动状态 GetSourceActive",description:"获取指定来源的活动状态",params:{sourceName:{type:"string",description:"来源的名称"}},returnValue:"表示活动状态的布尔值"},{name:"获取来源截图 GetSourceScreenshot",description:"获取指定来源的截图",params:{sourceName:{type:"string",description:"来源的名称"}},returnValue:"截图的图像数据"},{name:"保存来源截图 SaveSourceScreenshot",description:"保存指定来源的截图到指定位置",params:{sourceName:{type:"string",description:"来源的名称"},filePath:{type:"string",description:"保存截图的文件路径"}},returnValue:"操作成功或失败的布尔值"},{name:"获取场景列表 GetSceneList",description:"获取 OBS 中的场景列表",params:[],returnValue:"包含场景信息的数组"},{name:"获取组列表 GetGroupList",description:"获取 OBS 中的组列表",params:[],returnValue:"包含组信息的数组"},{name:"获取当前节目场景 GetCurrentProgramScene",description:"获取当前节目中的场景",params:[],returnValue:"当前节目场景的对象"},{name:"设置当前节目场景 SetCurrentProgramScene",description:"设置当前节目中的场景",params:{sceneName:{type:"string",description:"要设置的场景名称"}},returnValue:"操作成功或失败的布尔值"},{name:"获取当前预览场景 GetCurrentPreviewScene",description:"获取当前预览的场景",params:[],returnValue:"当前预览场景的对象"},{name:"设置当前预览场景 SetCurrentPreviewScene",description:"设置当前预览的场景",params:{sceneName:{type:"string",description:"要设置的场景名称"}},returnValue:"操作成功或失败的布尔值"},{name:"创建场景 CreateScene",description:"在 OBS 中创建新的场景",params:{sceneName:{type:"string",description:"新场景的名称"}},returnValue:"操作成功或失败的布尔值"},{name:"删除场景 RemoveScene",description:"删除 OBS 中的指定场景",params:{sceneName:{type:"string",description:"要删除的场景名称"}},returnValue:"操作成功或失败的布尔值"},{name:"设置场景名称 SetSceneName",description:"设置指定场景的名称",params:{sceneName:{type:"string",description:"要修改名称的场景名称"},newSceneName:{type:"string",description:"新的场景名称"}},returnValue:"操作成功或失败的布尔值"},{name:"获取场景转场覆盖 GetSceneSceneTransitionOverride",description:"获取指定场景的转场覆盖设置",params:{sceneName:{type:"string",description:"场景名称"}},returnValue:"包含转场覆盖设置的对象"},{name:"设置场景转场覆盖 SetSceneSceneTransitionOverride",description:"设置指定场景的转场覆盖设置",params:{sceneName:{type:"string",description:"场景名称"},transitionOverrideSettings:{type:"object",description:"转场覆盖设置的对象"}},returnValue:"操作成功或失败的布尔值"},{name:"获取输入列表 GetInputList",description:"获取 OBS 中的输入列表",params:[],returnValue:"包含输入信息的数组"},{name:"获取输入类型列表 GetInputKindList",description:"获取 OBS 支持的输入类型列表",params:[],returnValue:"包含输入类型名称的数组"},{name:"获取特殊输入 GetSpecialInputs",description:"获取 OBS 中的特殊输入",params:[],returnValue:"包含特殊输入信息的数组"},{name:"创建输入 CreateInput",description:"在 OBS 中创建新的输入",params:{inputSettings:{type:"object",description:"输入的设置信息"}},returnValue:"操作成功或失败的布尔值"},{name:"删除输入 RemoveInput",description:"删除 OBS 中的指定输入",params:{inputName:{type:"string",description:"要删除的输入名称"}},returnValue:"操作成功或失败的布尔值"},{name:"设置输入名称 SetInputName",description:"设置指定输入的名称",params:{inputName:{type:"string",description:"要修改名称的输入名称"},newInputName:{type:"string",description:"新的输入名称"}},returnValue:"操作成功或失败的布尔值"},{name:"获取输入默认设置 GetInputDefaultSettings",description:"获取指定输入类型的默认设置",params:{inputKind:{type:"string",description:"输入类型"}},returnValue:"包含默认设置的对象"},{name:"获取输入设置 GetInputSettings",description:"获取指定输入的设置",params:{inputName:{type:"string",description:"输入的名称"}},returnValue:"包含输入设置的对象"},{name:"设置输入设置 SetInputSettings",description:"设置指定输入的设置",params:{inputName:{type:"string",description:"输入的名称"},inputSettings:{type:"object",description:"要设置的输入设置"}},returnValue:"操作成功或失败的布尔值"},{name:"获取输入静音状态 GetInputMute",description:"获取指定输入的静音状态",params:{inputName:{type:"string",description:"输入的名称"}},returnValue:"表示静音状态的布尔值"},{name:"设置输入静音状态 SetInputMute",description:"设置指定输入的静音状态",params:{inputName:{type:"string",description:"输入的名称"},isMuted:{type:"boolean",description:"是否静音"}},returnValue:"操作成功或失败的布尔值"},{name:"切换输入静音状态 ToggleInputMute",description:"切换指定输入的静音状态",params:{inputName:{type:"string",description:"输入的名称"}},returnValue:"操作成功或失败的布尔值"},{name:"获取输入音量 GetInputVolume",description:"获取指定输入的音量",params:{inputName:{type:"string",description:"输入的名称"}},returnValue:"输入的音量值"},{name:"设置输入音量 SetInputVolume",description:"设置指定输入的音量",params:{inputName:{type:"string",description:"输入的名称"},volume:{type:"number",description:"音量值"}},returnValue:"操作成功或失败的布尔值"},{name:"获取输入音频平衡 GetInputAudioBalance",description:"获取指定输入的音频平衡",params:{inputName:{type:"string",description:"输入的名称"}},returnValue:"输入的音频平衡值"},{name:"设置输入音频平衡 SetInputAudioBalance",description:"设置指定输入的音频平衡",params:{inputName:{type:"string",description:"输入的名称"},audioBalance:{type:"number",description:"音频平衡值"}},returnValue:"操作成功或失败的布尔值"},{name:"获取输入音频同步偏移 GetInputAudioSyncOffset",description:"获取指定输入的音频同步偏移",params:{inputName:{type:"string",description:"输入的名称"}},returnValue:"输入的音频同步偏移值"},{name:"设置输入音频同步偏移 SetInputAudioSyncOffset",description:"设置指定输入的音频同步偏移",params:{inputName:{type:"string",description:"输入的名称"},audioSyncOffset:{type:"number",description:"音频同步偏移值"}},returnValue:"操作成功或失败的布尔值"},{name:"获取输入音频监控类型 GetInputAudioMonitorType",description:"获取指定输入的音频监控类型",params:{inputName:{type:"string",description:"输入的名称"}},returnValue:"音频监控类型的字符串"},{name:"设置输入音频监控类型 SetInputAudioMonitorType",description:"设置指定输入的音频监控类型",params:{inputName:{type:"string",description:"输入的名称"},monitorType:{type:"string",description:"要设置的音频监控类型"}},returnValue:"操作成功或失败的布尔值"},{name:"获取输入音频轨道 GetInputAudioTracks",description:"获取指定输入的音频轨道",params:{inputName:{type:"string",description:"输入的名称"}},returnValue:"包含音频轨道信息的数组"},{name:"设置输入音频轨道 SetInputAudioTracks",description:"设置指定输入的音频轨道",params:{inputName:{type:"string",description:"输入的名称"},audioTracks:{type:"array",description:"要设置的音频轨道数组"}},returnValue:"操作成功或失败的布尔值"},{name:"获取输入属性列表属性项 GetInputPropertiesListPropertyItems",description:"获取指定输入的属性列表中的属性项",params:{inputName:{type:"string",description:"输入的名称"}},returnValue:"包含属性项的对象"},{name:"按下输入属性按钮 PressInputPropertiesButton",description:"按下指定输入的属性按钮",params:{inputName:{type:"string",description:"输入的名称"},buttonId:{type:"string",description:"要按下的按钮的 ID"}},returnValue:"操作成功或失败的布尔值"},{name:"获取转场类型列表 GetTransitionKindList",description:"获取 OBS 支持的转场类型列表",params:[],returnValue:"包含转场类型名称的数组"},{name:"获取场景转场列表 GetSceneTransitionList",description:"获取指定场景的转场列表",params:{sceneName:{type:"string",description:"场景的名称"}},returnValue:"包含转场信息的数组"},{name:"获取当前场景转场 GetCurrentSceneTransition",description:"获取当前正在使用的场景转场",params:[],returnValue:"当前场景转场的对象"},{name:"设置当前场景转场 SetCurrentSceneTransition",description:"设置当前使用的场景转场",params:{transitionName:{type:"string",description:"要设置的转场名称"}},returnValue:"操作成功或失败的布尔值"},{name:"设置当前场景转场持续时间 SetCurrentSceneTransitionDuration",description:"设置当前场景转场的持续时间",params:{duration:{type:"number",description:"转场持续时间（毫秒）"}},returnValue:"操作成功或失败的布尔值"},{name:"设置当前场景转场设置 SetCurrentSceneTransitionSettings",description:"设置当前场景转场的设置",params:{transitionSettings:{type:"object",description:"转场设置的对象"}},returnValue:"操作成功或失败的布尔值"},{name:"获取当前场景转场光标 GetCurrentSceneTransitionCursor",description:"获取当前场景转场的光标位置",params:[],returnValue:"光标的位置值"},{name:"触发工作室模式转场 TriggerStudioModeTransition",description:"触发工作室模式下的转场",params:[],returnValue:"操作成功或失败的布尔值"},{name:"设置 TBar 位置 SetTBarPosition",description:"设置 TBar 的位置",params:{position:{type:"number",description:"TBar 的位置值"}},returnValue:"操作成功或失败的布尔值"},{name:"获取来源滤镜类型列表 GetSourceFilterKindList",description:"获取指定来源的滤镜类型列表",params:{sourceName:{type:"string",description:"来源的名称"}},returnValue:"包含滤镜类型名称的数组"},{name:"获取来源滤镜列表 GetSourceFilterList",description:"获取指定来源的滤镜列表",params:{sourceName:{type:"string",description:"来源的名称"}},returnValue:"包含滤镜信息的数组"},{name:"获取来源滤镜默认设置 GetSourceFilterDefaultSettings",description:"获取指定来源滤镜的默认设置",params:{filterName:{type:"string",description:"滤镜的名称"}},returnValue:"包含默认设置的对象"},{name:"创建来源滤镜 CreateSourceFilter",description:"为指定来源创建新的滤镜",params:{sourceName:{type:"string",description:"来源的名称"},filterSettings:{type:"object",description:"滤镜的设置"}},returnValue:"操作成功或失败的布尔值"},{name:"删除来源滤镜 RemoveSourceFilter",description:"删除指定来源的指定滤镜",params:{sourceName:{type:"string",description:"来源的名称"},filterName:{type:"string",description:"要删除的滤镜名称"}},returnValue:"操作成功或失败的布尔值"},{name:"设置来源滤镜名称 SetSourceFilterName",description:"设置指定来源滤镜的名称",params:{sourceName:{type:"string",description:"来源的名称"},oldFilterName:{type:"string",description:"原滤镜名称"},newFilterName:{type:"string",description:"新滤镜名称"}},returnValue:"操作成功或失败的布尔值"},{name:"获取来源滤镜 GetSourceFilter",description:"获取指定来源的指定滤镜",params:{sourceName:{type:"string",description:"来源的名称"},filterName:{type:"string",description:"滤镜的名称"}},returnValue:"包含滤镜信息的对象"},{name:"设置来源滤镜索引 SetSourceFilterIndex",description:"设置指定来源滤镜的索引",params:{sourceName:{type:"string",description:"来源的名称"},filterName:{type:"string",description:"滤镜的名称"},index:{type:"number",description:"新的索引值"}},returnValue:"操作成功或失败的布尔值"},{name:"设置来源滤镜设置 SetSourceFilterSettings",description:"设置指定来源滤镜的设置",params:{sourceName:{type:"string",description:"来源的名称"},filterName:{type:"string",description:"滤镜的名称"},filterSettings:{type:"object",description:"新的滤镜设置"}},returnValue:"操作成功或失败的布尔值"},{name:"启用来源滤镜 SetSourceFilterEnabled",description:"启用或禁用指定来源的指定滤镜",params:{sourceName:{type:"string",description:"来源的名称"},filterName:{type:"string",description:"滤镜的名称"},isEnabled:{type:"boolean",description:"是否启用"}},returnValue:"操作成功或失败的布尔值"},{name:"获取场景项目列表 GetSceneItemList",description:"获取指定场景的项目列表",params:{sceneName:{type:"string",description:"场景的名称"}},returnValue:"包含场景项目信息的数组"},{name:"获取组场景项目列表 GetGroupSceneItemList",description:"获取指定组的场景项目列表",params:{groupName:{type:"string",description:"组的名称"}},returnValue:"包含组内场景项目信息的数组"},{name:"获取场景项目 ID GetSceneItemId",description:"获取指定场景项目的 ID",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"场景项目的名称"}},returnValue:"场景项目的 ID"},{name:"获取场景项目来源 GetSceneItemSource",description:"获取指定场景项目的来源",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"场景项目的名称"}},returnValue:"场景项目来源的字符串"},{name:"创建场景项目 CreateSceneItem",description:"在指定场景中创建新的场景项目",params:{sceneName:{type:"string",description:"场景的名称"},itemSettings:{type:"object",description:"新场景项目的设置"}},returnValue:"操作成功或失败的布尔值"},{name:"删除场景项目 RemoveSceneItem",description:"删除指定场景中的指定场景项目",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"要删除的场景项目的名称"}},returnValue:"操作成功或失败的布尔值"},{name:"复制场景项目 DuplicateSceneItem",description:"复制指定场景中的指定场景项目",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"要复制的场景项目的名称"}},returnValue:"操作成功或失败的布尔值"},{name:"获取场景项目变换 GetSceneItemTransform",description:"获取指定场景项目的变换信息",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"场景项目的名称"}},returnValue:"包含变换信息的对象"},{name:"设置场景项目变换 SetSceneItemTransform",description:"设置指定场景项目的变换",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"场景项目的名称"},transformSettings:{type:"object",description:"变换设置的对象"}},returnValue:"操作成功或失败的布尔值"},{name:"获取场景项目启用状态 GetSceneItemEnabled",description:"获取指定场景项目的启用状态",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"场景项目的名称"}},returnValue:"表示启用状态的布尔值"},{name:"设置场景项目启用状态 SetSceneItemEnabled",description:"设置指定场景项目的启用状态",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"场景项目的名称"},isEnabled:{type:"boolean",description:"是否启用"}},returnValue:"操作成功或失败的布尔值"},{name:"获取场景项目锁定状态 GetSceneItemLocked",description:"获取指定场景项目的锁定状态",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"场景项目的名称"}},returnValue:"表示锁定状态的布尔值"},{name:"设置场景项目锁定状态 SetSceneItemLocked",description:"设置指定场景项目的锁定状态",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"场景项目的名称"},isLocked:{type:"boolean",description:"是否锁定"}},returnValue:"操作成功或失败的布尔值"},{name:"获取场景项目索引 GetSceneItemIndex",description:"获取指定场景项目在场景中的索引",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"场景项目的名称"}},returnValue:"场景项目的索引值"},{name:"设置场景项目索引 SetSceneItemIndex",description:"设置指定场景项目在场景中的索引",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"场景项目的名称"},index:{type:"number",description:"新的索引值"}},returnValue:"操作成功或失败的布尔值"},{name:"获取场景项目混合模式 GetSceneItemBlendMode",description:"获取指定场景项目的混合模式",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"场景项目的名称"}},returnValue:"混合模式的字符串"},{name:"设置场景项目混合模式 SetSceneItemBlendMode",description:"设置指定场景项目的混合模式",params:{sceneName:{type:"string",description:"场景的名称"},itemName:{type:"string",description:"场景项目的名称"},blendMode:{type:"string",description:"要设置的混合模式"}},returnValue:"操作成功或失败的布尔值"},{name:"获取虚拟摄像机状态 GetVirtualCamStatus",description:"获取虚拟摄像机的状态",params:[],returnValue:"表示虚拟摄像机状态的布尔值"},{name:"切换虚拟摄像机 ToggleVirtualCam",description:"切换虚拟摄像机的启用状态",params:[],returnValue:"操作成功或失败的布尔值"},{name:"启动虚拟摄像机 StartVirtualCam",description:"启动虚拟摄像机",params:[],returnValue:"操作成功或失败的布尔值"},{name:"停止虚拟摄像机 StopVirtualCam",description:"停止虚拟摄像机",params:[],returnValue:"操作成功或失败的布尔值"},{name:"获取回放缓冲状态 GetReplayBufferStatus",description:"获取回放缓冲的状态",params:[],returnValue:"包含回放缓冲状态信息的对象"},{name:"切换回放缓冲 ToggleReplayBuffer",description:"切换回放缓冲的启用状态",params:[],returnValue:"操作成功或失败的布尔值"},{name:"启动回放缓冲 StartReplayBuffer",description:"启动回放缓冲",params:[],returnValue:"操作成功或失败的布尔值"},{name:"停止回放缓冲 StopReplayBuffer",description:"停止回放缓冲",params:[],returnValue:"操作成功或失败的布尔值"},{name:"保存回放缓冲 SaveReplayBuffer",description:"保存回放缓冲的内容",params:[],returnValue:"操作成功或失败的布尔值"},{name:"获取最后回放缓冲回放 GetLastReplayBufferReplay",description:"获取最后一次回放缓冲的回放内容",params:[],returnValue:"回放内容的数据"},{name:"获取输出列表 GetOutputList",description:"获取 OBS 中的输出列表",params:[],returnValue:"包含输出信息的数组"},{name:"获取输出状态 GetOutputStatus",description:"获取指定输出的状态",params:{outputName:{type:"string",description:"输出的名称"}},returnValue:"包含输出状态信息的对象"},{name:"切换输出 ToggleOutput",description:"切换指定输出的启用状态",params:{outputName:{type:"string",description:"输出的名称"}},returnValue:"操作成功或失败的布尔值"},{name:"启动输出 StartOutput",description:"启动指定的输出",params:{outputName:{type:"string",description:"输出的名称"}},returnValue:"操作成功或失败的布尔值"},{name:"停止输出 StopOutput",description:"停止指定的输出",params:{outputName:{type:"string",description:"输出的名称"}},returnValue:"操作成功或失败的布尔值"},{name:"获取输出设置 GetOutputSettings",description:"获取指定输出的设置",params:{outputName:{type:"string",description:"输出的名称"}},returnValue:"包含输出设置的对象"},{name:"设置输出设置 SetOutputSettings",description:"设置指定输出的设置",params:{outputName:{type:"string",description:"输出的名称"},outputSettings:{type:"object",description:"要设置的输出设置"}},returnValue:"操作成功或失败的布尔值"},{name:"获取流媒体状态 GetStreamStatus",description:"获取流媒体的状态",params:[],returnValue:"包含流媒体状态信息的对象"},{name:"切换流媒体 ToggleStream",description:"切换流媒体的启用状态",params:[],returnValue:"操作成功或失败的布尔值"},{name:"启动流媒体 StartStream",description:"启动流媒体",params:[],returnValue:"操作成功或失败的布尔值"},{name:"停止流媒体 StopStream",description:"停止流媒体",params:[],returnValue:"操作成功或失败的布尔值"},{name:"发送流媒体字幕 SendStreamCaption",description:"发送流媒体字幕",params:{captionText:{type:"string",description:"要发送的字幕文本"}},returnValue:"操作成功或失败的布尔值"},{name:"获取录制状态 GetRecordStatus",description:"获取录制的状态",params:[],returnValue:"包含录制状态信息的对象"},{name:"切换录制 ToggleRecord",description:"切换录制的启用状态",params:[],returnValue:"操作成功或失败的布尔值"},{name:"启动录制 StartRecord",description:"启动录制",params:[],returnValue:"操作成功或失败的布尔值"},{name:"停止录制 StopRecord",description:"停止录制",params:[],returnValue:"操作成功或失败的布尔值"},{name:"切换录制暂停 ToggleRecordPause",description:"切换录制的暂停状态",params:[],returnValue:"操作成功或失败的布尔值"},{name:"暂停录制 PauseRecord",description:"暂停录制",params:[],returnValue:"操作成功或失败的布尔值"},{name:"恢复录制 ResumeRecord",description:"恢复录制",params:[],returnValue:"操作成功或失败的布尔值"},{name:"分割录制文件 SplitRecordFile",description:"分割录制文件",params:[],returnValue:"操作成功或失败的布尔值"},{name:"创建录制章节 CreateRecordChapter",description:"创建录制章节",params:{chapterName:{type:"string",description:"章节的名称"}},returnValue:"操作成功或失败的布尔值"},{name:"获取媒体输入状态 GetMediaInputStatus",description:"获取媒体输入的状态",params:[],returnValue:"包含媒体输入状态信息的对象"},{name:"设置媒体输入光标 SetMediaInputCursor",description:"设置媒体输入的光标位置",params:{cursorPosition:{type:"number",description:"光标的位置值"}},returnValue:"操作成功或失败的布尔值"},{name:"偏移媒体输入光标 OffsetMediaInputCursor",description:"偏移媒体输入的光标位置",params:{offset:{type:"number",description:"偏移量"}},returnValue:"操作成功或失败的布尔值"},{name:"触发媒体输入动作 TriggerMediaInputAction",description:"触发媒体输入的动作",params:{actionName:{type:"string",description:"要触发的动作名称"}},returnValue:"操作成功或失败的布尔值"},{name:"获取工作室模式启用状态 GetStudioModeEnabled",description:"获取工作室模式的启用状态",params:[],returnValue:"表示工作室模式启用状态的布尔值"},{name:"设置工作室模式启用状态 SetStudioModeEnabled",description:"设置工作室模式的启用状态",params:{isEnabled:{type:"boolean",description:"是否启用工作室模式"}},returnValue:"操作成功或失败的布尔值"},{name:"打开输入属性对话框 OpenInputPropertiesDialog",description:"打开输入的属性对话框",params:{inputName:{type:"string",description:"要打开属性对话框的输入名称"}},returnValue:"操作成功或失败的布尔值"},{name:"打开输入滤镜对话框 OpenInputFiltersDialog",description:"打开输入的滤镜对话框",params:{inputName:{type:"string",description:"要打开滤镜对话框的输入名称"}},returnValue:"操作成功或失败的布尔值"},{name:"打开输入交互对话框 OpenInputInteractDialog",description:"打开输入的交互对话框",params:{inputName:{type:"string",description:"要打开交互对话框的输入名称"}},returnValue:"操作成功或失败的布尔值"},{name:"获取监视器列表 GetMonitorList",description:"获取可用的监视器列表",params:[],returnValue:"包含监视器信息的数组"},{name:"打开视频混合投影仪 OpenVideoMixProjector",description:"打开视频混合投影仪",params:[],returnValue:"操作成功或失败的布尔值"},{name:"打开来源投影仪 OpenSourceProjector",description:"打开来源投影仪",params:[],returnValue:"操作成功或失败的布尔值"}];W.addEventListener("click",async()=>{if(X(),j)_.disconnect(),j=!1,A.textContent="未连接",A.classList.remove("connected"),W.textContent="连接 WebSocket",ne.innerHTML="";else try{await _.connect("ws://localhost:4455"),console.log("已连接到 OBS WebSocket"),j=!0,A.textContent="已连接",A.classList.add("connected"),W.textContent="断开连接",X()}catch(d){console.error("无法连接到 OBS WebSocket:",d),alert("连接失败,请确保 OBS 已运行并启用了 WebSocket 服务器")}});function X(){_e.forEach(d=>{const u=document.createElement("button");u.textContent=d.name,u.addEventListener("click",()=>Ie(d)),ne.appendChild(u)})}function Ie(d){const u=d.name.split(" ")[1];_.call(u,d.params).then(e=>{Q.textContent=`${u} 结果:
${JSON.stringify(e,null,2)}`}).catch(e=>{Q.textContent=`${u} 错误:
${e.error}`})}_.on("SwitchScenes",d=>{console.log(`当前场景: ${d.sceneName}`)});_.on("StreamStarted",()=>{console.log("直播已开始")});_.on("StreamStopped",()=>{console.log("直播已停止")});_.on("RecordingStarted",()=>{console.log("录制已开始")});_.on("RecordingStopped",()=>{console.log("录制已停止")})});export default ke();
